{"version":3,"sources":["components/PersonForm.js","services/personComm.js","components/Persons.js","components/Filter.js","components/Message.js","App.js","index.js"],"names":["PersonForm","newName","handleNameChange","handleNumberChange","newNumber","addPerson","onSubmit","value","onChange","type","axios","get","newObject","post","id","delete","numberUpdate","put","Persons","persons","newSearch","setPersons","setShowMessage","filter","i","name","toLowerCase","includes","map","person","key","number","onClick","window","confirm","personService","then","response","data","setTimeout","console","log","Filter","handleFiltering","Message","message","className","App","useState","setNewName","setNewNumber","setSearch","showMessage","useEffect","event","target","preventDefault","EventTarget","personObject","some","catch","error","alert","concat","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46b7d0d0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = ({newName, handleNameChange, handleNumberChange, newNumber, addPerson}) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit = {addPerson}>\r\n            <div>\r\n            name: <input value = {newName} onChange = {handleNameChange}/>\r\n            </div>\r\n            <div>\r\n            number: <input value = {newNumber} onChange = {handleNumberChange}/>\r\n            </div>\r\n            <div>\r\n            <button type=\"submit\">add</button>\r\n            </div>\r\n            </form> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n  }\r\n\r\n  const poista = (id) => {\r\n    return axios.delete(`/api/persons/${id}`)\r\n  }\r\n\r\n  const paivita = (id, numberUpdate) => {\r\n      return axios.put(`/api/persons/${id}`, numberUpdate)\r\n  }\r\n  \r\n  \r\n  export default { \r\n    getAll: getAll, \r\n    create: create,\r\n    poista: poista,\r\n    paivita: paivita\r\n  }","import React from 'react'\r\nimport personService from '../services/personComm'\r\n\r\n\r\nconst Persons = ({persons, newSearch, setPersons, setShowMessage}) => {\r\n    return (\r\n        <div>\r\n          {persons.filter(i => i.name.toLowerCase().includes(newSearch.toLowerCase())).map((person, i) => \r\n          <p key={person.name}>\r\n         {person.name} {person.number}\r\n         <button onClick={() => \r\n                  {if(window.confirm(`Delete ${person.name}?`)) {\r\n                    personService.poista(person.id).then(response => {\r\n                      personService.getAll().then(response => {\r\n                        setPersons(response.data)\r\n                      setShowMessage(`Deleted ${person.name}`)})})}\r\n                      setTimeout(() => {\r\n                        setShowMessage(null)\r\n                      }, 1000)\r\n                    {console.log(\"deleted\", {person})}}}> delete </button> \r\n          </p>\r\n          )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({newSearch, handleFiltering}) => {\r\n    return (\r\n        <div>\r\n            <form> \r\n            <div>\r\n            manage filtering: <input value = {newSearch} onChange = {handleFiltering}/>\r\n            </div>\r\n            </form> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Message = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n      }\r\n    return (\r\n      <p className='error'>\r\n        {message}\r\n      </p>\r\n    )\r\n  }\r\n\r\nexport default Message","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personService from './services/personComm'\nimport Message from './components/Message'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    { name: '', number: ''}\n  ]) \n\n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newSearch, setSearch] = useState('')\n  const [showMessage, setShowMessage] = useState(null)\n  \n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(response => {\n        console.log('loaded')\n        setPersons(response.data)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log('button clicked', EventTarget)\n    const personObject = {\n      name: newName, number: newNumber\n    }\n    if (persons.some(i => i.name === newName && i.number !== newNumber)) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the number with a new one?`)) {\n        personService\n        .paivita(persons.filter(i => i.name === newName)[0].id, personObject)\n        .then(response => {\n        personService.getAll().then(response => {\n          //en käyttänyt seuraavassa concatia, koska se \"duplikoi\" sivulla näkyvät numerot ´, kunnes sivu päivitettiin ja tilanne palautui normaaliksi\n          setPersons(response.data)\n          setShowMessage(`Updated ${newName} 's number`)\n          setTimeout(() => {\n            setShowMessage(null)\n          }, 1000)\n        })\n        }).catch(error => {\n          setShowMessage(`${newName} is already removed from the server!`)\n          setTimeout(() => {\n            setShowMessage(null)\n          }, 1000)\n          setPersons(persons.filter(i => i.name !== newName))\n        })\n      }\n    } else if (persons.some(i => i.name === newName)){\n      //vähän turha, mutta jätin kuitenkin, ettei tarvitse tehdä tarpeetonta päivitystä jos yritetään luoda identtinen yhteystieto olemassa olevan kanssa\n      window.alert(`${newName} is already added to phonebook`)\n    } else {\n      personService\n      .create(personObject)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewNumber('')\n        setShowMessage(`Added ${newName}`)\n        setTimeout(() => {\n          setShowMessage(null)\n        }, 1000)\n      })\n      .catch(error => {\n        setShowMessage(JSON.stringify(error.response.data))\n        setTimeout(() => {\n          setShowMessage(null)\n        }, 2000)\n        console.log(error.response.data)})\n    }\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFiltering = (event) => {\n    setSearch(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message message = {showMessage}/>\n      <Filter newSearch = {newSearch} handleFiltering = {handleFiltering}/>\n      <h2>Add a new contact</h2>\n      <PersonForm newName = {newName} newNumber = {newNumber} setNewName = {setNewName} setNewNumber = {setNewNumber} addPerson = {addPerson} handleNumberChange = {handleNumberChange} handleNameChange = {handleNameChange}/>\n      <h2>Numbers</h2>\n      <Persons persons = {persons} newSearch = {newSearch} setPersons = {setPersons} setShowMessage= {setShowMessage}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}